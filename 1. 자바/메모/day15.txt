java.lang 패키지

JDK - JAVA Development Kit
- 자바에서 기본이 될 수 있는 클래스가 있는 패키지


참고)
컴파일러가 자동 추가해주는 것들
1. 기본 생성자
2. 모든 생성자의 첫 줄 -> super();
3. 인터페이스의 모든 메서드: public abstract
4. 인터페이스의 정의된 변수(X): pubic static final: 정적 상수
5. 지역 내부 클래스: 지역변수 -> 상수화(final)
6. import java.lang.*; - 패키지명 바로 아래 줄
7. 상속을 정의하지 않은 모든 클래스 extends Object
8. 객체의 참조 변수를 출력 -> toString()이 붙는다.

Object 클래스
1. Object 클래스에 정의된 메서드

2. toString() 메서드

public String toString() {
        return getClass().getName() + "@" + Integer.toHexString(hashCode());
    }

	exam01.Student@10f87f48

	참고)
	Class getClass(): 클래스의 정보가 담겨있는 객체를 반환
		getName(): 클래스 이름(전체 클래스명 - 패키지명을 포함한 클래스명)

	- 재정의를 통해서 멤버변수의 값을 출력하는 값으로 많이 활용

3. equals() 메서드
	public boolean equals(Object obj) {
		return (this == obj);
	}
	- Object의 기본 equals는 동일성 비교 (주소 비교)

	- 동일성 비교
		==: 동일성 비교 / 동일한 객체 / 동일한 주소인지

	- 동등성 비교: 가치가 같은 객체인지
	- Object equals를 재정의 통해서 동등성 비교로 구현
		

4. hashCode() 메서드
	- 객체의 주소값
	- 동등한 객체이면 일반적으로 hashcode도 같게 정의
	- java.util.Object
		.hash(....)

	자료형... -> 가변 매개 변수


A - 1, 2, 3, 4
B - 3, 4, 5, 6

A와 B의 합집합 1, 2, 3, 4, 5, 6
집합 자료 -> 중복이 없는 자료

Class 클래스

String 클래스

1. String을 선언하는 두 가지 방법
	String str = "ABC";

	String

1. String을 선언하는 두 가지 방법
2. String 클래스의 final char[] 변수
3. StringBuffer와 StringBuilder 클래스 활용하기

참고)
java.util 패키지

	Object
	Arrays
	Collections 

----------------------------------------------------------------------------------------------------------------------

Wrapper 클래스
1. 기본 자료형을 위한 클래스
2. Wrapper 클래스의 종류
3. Integer 클래스 사용하기
4. 오토박싱과 언박싱
	
	
Class 클래스
1. Class 클래스
	- 클래스의 정보가 담겨있는 클래스
	- 클래스 로더에 의해서 클래스 파일이 데이터 영역에 구성될 때 생성

2. Class 클래스를 선언하고 클래스 정보를 가져오는 방법
	1) 모든 클래스의 정적 변수 class로 조회 - 객체 생성 없이 클래스명으로 바로 조회
	2) Object 클래스의 getClass() - 객체 생성이후 조회 가능
	3) Class.forName(클래스명); - 동적으로 클래스를 데이터 영역에 로드, 클래스 클래스 객체 생성

3. Class 클래스를 활용해 클래스 정보 알아보기

4. Class.forName()을 사용해 동적 로딩 하기
	- 실행 중에 동적으로 데이터 영역에 클래스를 로드
	- 반환값으로 Class 클래스 객체 반환



