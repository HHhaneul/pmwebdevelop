지네릭스
1. 지네릭스란?
	- 다양한 자료형을 사용하기위해 Object
		- 형변환의 번거로움
		- 타입 안정성 문제 (instanceof ...)
	
2. 지네릭 클래스의 선언
	
3. 지네릭스의 용어
	Box<T>: 지네릭 클래스
	T: 타입 매개변수
	Box: 원시타입
	
	T - Type
	E - Element
	K - Key
	V - Value

4. 지네릭스의 제한
	<T extends A>
		T: A, A클래스 하위 클래스


참고)
	지네릭 타입을 사용하지 못하는 형태
		- 타입이 객체 생성시에 결정
		- 처음부터 타입이 명확하게 결정되어야 하는 형태는 사용 불가
		- static 매서드 매개변수, static 변수 X
		- 배열 -> new 자료형으로 공간을 계산해서 만들어주기 때문에 자료형 결정되지 않은 시점 적용 X


	사용가능한 형태
		- 인스턴스 변수
		- 인스턴스 메서드

지네릭 클래스의 객체 생성과 사용

제한된 지네릭 클래스
1. extends

지네릭 메서드
1. 와일드 카드
	? : ? extends Object

		? extends A : A클래스, A클래스의 하위 클래스 : 상한 제한 A클래스(자식 클래스 포함) 말고 위에 제한
		? super A : A클래스, A클래스의 상위 클래스 : 하한 제한 A클래스(자식 클래스 포함) / 제외 살짝 차집합 느낌


2. 지네릭 메서드

지네릭클래스 생성과 사용

지네릭 타입의 제거

------------------------------------------

public class Box {
	private Object item;

	public void put (Object item) {
		this.item = item;
	}

	public Object get() {
		return item;
	}
}

-> Box<Apple>... : 객체를 만드는 시점에 자료형 결정

Box<Apple> apple Box = new Box<Apple>();