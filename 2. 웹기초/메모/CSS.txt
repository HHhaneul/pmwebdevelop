CSS
HTML에서 CSS를 적용하는 방법
1. HTML 요소 속성으로써 적용하는 방법
    style 속성에다 직접 지정

2. CSS 적용 순서
3. 외부 파일로 적용하는 방법
    <link rel="stylesheet" type="text/css" href="스타일 파일 경로">

    확장자.css

선택자
1. 선택자의 종류

1) 태그명으로 선택
    *: 모든태그
    * {...}: 공통 스타일

2) 클래스명으로 선택(class=")

    .클래스명 { ... }

3) 아이디로 선택(id=")
    #아이디명{ ... }

    참고)
    스타일 속성

4) 조상 자손 선택자
    조상 조상 ... 자손 {...}

5) 부모 자식 선택자
    부모 선택자 > 자식 선택자
    (바로 위)     (바로 아래)

6) 그룹 선택자: 공통 스타일을 여러 선택자에 적용
    선택자, 선택자, ... {... 공통 스타일 ...}

7) 가상 클래스 선택자
    - 상태를 선택
        선택자: checked - 체크된 상태 선택
        선택자: hover - 마우스 커서가 올라온 상태
        선택자: selected - 선택된 상태
        선택자: focus - 포커스 상태

    - 조건, 순서로 선택
        선택자:not('제외할 선택자')
        선택자:fist-child: 첫번째 자식 선택자
        선택자:last-child: 마지막 자식 선택자
        선택자:nth-child(수치, 수식):   수치: 수치만큼의 위치(1부터 시작)
                                        수식: 수식대로 계산해서 선택

                                        1, 3, 5, 7, 9, ... // 2n+1

                                        2, 4, 6, 8, 10, ... // 2n

        선택자:first-of-type: 첫번째 요소
        선택자:last-of-type: 마지막 요소
        선택자:nth-of-type: 수식, 수식

    - 가상의 요소를 추가해서 선택
        선택자:before - 자식요소 가장 앞에 추가
        선택자:after - 자식요소 가장 뒤에 추가

            content 속성이 없으면 노출 X, 내용이 없는 경우라도 content: "정의 해야한다."

    참고)
        속성으로 선택
        선택자[속성="값"]

        - 주석
        /* ... */

2. 스타일 적용 우선 순위
    많이 적용되는 범위 -> 우선순위 낮고
    적용 범위가 좁은 경우 -> 우선순위가 높다.

    태그 선택자 < 클래스 선택자(.) < 아이디 선택자(#) < 스타일 속성(태그 내에서 입력) 

    우선순위가 같은 경우? 뒤에 작성한 선택자가 우

    참고)
        !important -> 우선순위 강제 적용

결합자
    부모 > 자식 - 부모: 바로 위 요소, 자식: 바로 아래 요소

    선택자1 + 선택자2: 선택자2는 선택자1의 바로 오른쪽 옆 형제
    선택자1 ~ 선택자2: 선택자2는 선택자1의 오른쪽 모든 형제 

속성
- 약 250개

1. 폰트
    - font-size: 글자 크기
        절대 크기
            px: 화소 기준의 크기 (화소 1개 - 1px)

        상대 크기
            rem: 가장 상위 태그의 글자 크기가 기준 
                -예) html {font-size: 13px;} -> 13px - 1rem
            em: 부모 태그의 글자 크기 기준

    - color: 글자 색상
        1) 색상명
        2) rgb(0~255, 0~255, 0~255)
                [Red, Green, Blue]

            rgb(245, 98, 223);

            rgba(0~255, 0~255, 0~255, 0~1)

            알파채널(alpha): 투명도(0~1)
                                1에 가까울 수록 불투명, 0에 가까울수록 투명

        3) hex code
            #F3 61 DC
             R  G  B

            #cccccc -> #ccc
            #ff0000 -> #f00
                참고)
                    투명도
                    opacity: 0~1; - 1에 가까울 수록 불투명, 0에 가까울수록 투명

    - text-align: 좌우 가운데 정령
                    left | right | center

                    justify: 양쪽 정렬

    - line-height: 행간 - 숫자만 입력 비율
                    1.2 : 20% 상하 여백

                    30px: 30px 만큼 행간

    - letter-spacing: 자간 - 글자 사이 간격
    - word-spacing: 단어 사이 간격
    - font-weight: 글자의 굵기
                nomal - 기본값
                bold - 굵게
                100 ~ 900: 폰트마다 지원범위가 다르다.

    - font-family: 글꼴
        선택자{font-family: 글꼴명1 글꼴명2 ... ;} // 1번이 되면 1번 안되면 2번 안되면 n번

            font-family: '맑은고딕', AppleGothic; // 애플과 다르다!

        - 시스템폰트 - OS에 설치된 기본 폰트

2. 공간
    Block 레벨 요소
        - 줄개행 O
        - 공간을 지정할 수 있다. / 너비, 높이를 지정할 수 있다.
        - 외부여백(margin): 모든 방향에 설정 가능, 내부 여백도 O
        예) div, p, table, form, ...

    Inline 레벨 요소
        - 줄개행 X
        - 공간 지정 X, 너비, 높이 설정X
        - 외부 여백(margin): 좌우 여백만 설정 가능, 내부 여백은 모두 가능
        예) span, a, i, ...

    display
        - Inline: 기본값
        - block: 블록형태 - 블록 형태가 아닌 선택자 -> Block 속성으로 변경
        - Inline-block: Inline + Block 둘의 속성을 모두 가지고 있는 요소 속성 변경 가능
        - none: 감춤처리 // 영역도 없어짐.
            visibility: visible; 보임
            visibility: hidden; 안보임 처리 // none과 달리 영역은 차지하면서 안보임 처리

        - flex

- 여백
    외부 여백(margin)
        margin: 50px; - 상하좌우 전부 50px
        margin: 20px 50px - 상하 20px, 좌우 50px
        margin: 20px 30px 40px - 상 20px, 하 40px, 좌우 30px
        margin: 20px 30px 40px 50px - 상 20px, 우 30px, 하 40px, 좌 50px
                -> 방향은 상단 기준으로 시계방향!

        margin-left: 왼쪽 여백
        margin-right: 오른쪽 여백
        margin-top: 위쪽 여백
        margin-bottom: 아래쪽 여백


    내부 여백(padding)
        padding: 50px; - 상하좌우 전부 50px
        padding: 20px 50px - 상하 20px, 좌우 50px
        padding: 20px 30px 40px - 상 20px, 하 40px, 좌우 30px
        padding: 20px 30px 40px 50px - 상 20px, 우 30px, 하 40px, 좌 50px
                -> 방향은 상단 기준으로 시계방향!

        padding-left: 왼쪽 내부 여백
        padding-right: 오른쪽 내부 여백
        padding-top: 위쪽 내부 여백
        padding-bottom: 아래쪽 내부 여백

    경계선
        border-width: 선의 두께
        border-style: 선의 스타일
            solid - 직선
            dotted - 점선
            dashed - 점선

        border-color: 선의 색상

        - 단축 표기법
        border: 두께 스타일 색상;

        border-left: 왼쪽 경계선
        border-right: 오른쪽 경계선
        border-top: 상단 경계선
        border-bottom: 하단 경계선


        border-radius: 경계선을 둥글게
                        px 또는 %
                        50% 이상이면 원이된다!

        
3. 레이아웃

    box-sizing:
            - content-box: 기본값: 너비, 높이 기준: 컨텐츠 내용
            - border-box: 너비, 높이, 기준: 경계선 기준
                // border-box를 가장 많이 사용한다.
                // Why? 정확한 사이즈를 맞추기 위함.


    position: 배치
        - static: 정적 위치 배치 (기본값)

        - 상대 위치 배치
            relative: 현재 요소의 위치(우측 상단)
            absolute: 문서 우측 상단, 상위 요소에 상대 배치 속성(relative, absolute, fixed)이 있으면, 기준이 상위 요소
            fixed: 현재 보이는 화면 기준

                top: 양수: 위 -> 아래, 음수: 아래 -> 위
                botton: 양수: 아래 -> 위, 음수: 아래 -> 아래
                left: 양수: 좌 -> 우, 음수 좌 -> 좌
                right: 양수 우 -> 우, 음수 좌 -> 우

            z-index: 층위 - 숫자가 높을 수록 위쪽에 배치

    float:
        left - 좌측 배치
        right - 우측 배치

    - clear 속성: float 적용 속성 제거
        - clear: left;
        - clear: right;
        - clear: both;

    media query
    @media all and (max-width: 720px){ // 화면 720px 이하까지 적용되는 CSS

    }

    @media all and (min-width: 720px){ // 화면 720px 이상부터 적용되는 CSS

    }

4. 그래픽
    background - 배경색, 배경 이미지
        - background-color: 색상 -  1) 색상명
                                    2) rgb(),rgba()
                                    3) hex code# .. .. ..
        - background-image: url("이미지 경로");
        - background-repeat:    repeat-x; - 좌 -> 우 (반복 출력)
                                repeat-y; - 우 -> 좌 (반복 출력)
                                no-repeat; - 반복X 이미지 1개만 출력

        - background-position: 20px 100px; 
                    ex) 좌 -> 우 20px 이동, 위 -> 아래 100px 이동
                    
                    left | center | right,   top | center | bottom
                    좌측 |  중앙  | 우측     상단 | 중앙   | 하단

        - 단축 표기법
        background: [색상] 이미지(url) 반복 위치

5. overflow
    - 컨텐츠의 내용이 영역 크기보다 클 경우
        - visible: 기본 값: 넘치더라도 노출!
        - hidden: 넘치는 영역 감추기
        - scroll: 스크롤바 노출
        - auto: 스크롤바 자동 노출

    참고)
        글자가 넘칠 때 말 줄임표(...)
        text-overflow: ellipsis;
        - overflow: hidden 함께 쓰이고
        - white-spacing: wrap - 글자가 끝에 도달하면 다음 줄 개행
                         nowrap - 줄개행 X 

6. transition
    - 전환효과 (CSS가 적용 되기 전 지연시간 - 애니메이션 효과)
    - transition-duration: 전환 효과 진행 시간
    - transition-property: 전환 효과 적용 속성
    - transition-timing-function: 애니메이션 효과(linear, ease, ease-in, ease-out, ease-in-out)
                                linear: 속도 일정
                                ease:
                                ease-in:
                                ease-out:
                                ease-in-out:
    - transition-delay: 전환효과 지연시간

    - 단축 표기법
    transition: 속성 [지연시간 애니메이션효과 전환발생 대기시간]

flexbox
    display: flex; -> 부모요소에 적용 -> 자식 요소의 배치

    - flex-direction: row - 기본값: 좌 -> 우 배치
                      row-reverse: 우 -> 좌 배치
                      column - 위 -> 아래 배치
                      column-reverse - 아래 -> 위 배치

    - justify-content: 좌, 우, 가운데 배치
                        flex-start: 좌측 정렬(기본값)
                        flex-end: 우측 정렬
                        center: 가운데 정렬

                        공백에 대한 정렬
                        space-between
                        space-around
                        space-evenly

    - align-items: 위, 가운데, 아래 정렬
                    stretch: 부모 요소에 맞춰서 자식 요소를 높이를 늘려 고정
                    flex-start: 상단 정렬
                    flex-end: 하단 정렬
                    center: 가운데 정렬

    - flex-wrap: nowrap - 기본값: 모든 요소를 한 줄에 배치
                 wrap - 끝에 도달 시 줄 개행

    - flex-grow: 자식 요소 적용, 남아있는 여백의 비율별 배분










































































